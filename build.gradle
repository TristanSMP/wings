plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.22'
    id 'io.ktor.plugin' version '2.2.1'
}

group = 'com.tristansmp'
version = '1.0-SNAPSHOT'
mainClassName = "com.tristansmp.wings.Wings"


repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

dependencies {
    implementation("ch.qos.logback:logback-classic:$logback_version")
    implementation 'io.ktor:ktor-server-core-jvm:2.2.4'
    implementation 'io.ktor:ktor-server-host-common-jvm:2.2.4'
    implementation 'io.ktor:ktor-server-status-pages-jvm:2.2.4'
    implementation 'io.ktor:ktor-server-default-headers-jvm:2.2.4'
    implementation 'io.ktor:ktor-server-content-negotiation-jvm:2.2.4'
    implementation 'io.ktor:ktor-serialization-gson-jvm:2.2.4'
    implementation 'io.ktor:ktor-server-netty-jvm:2.2.4'
    implementation 'io.ktor:ktor-client-core-jvm:2.2.4'
    implementation 'io.ktor:ktor-client-java-jvm:2.2.4'
    implementation 'io.ktor:ktor-client-content-negotiation:2.2.4'
    implementation 'io.ktor:ktor-serialization-kotlinx-json:2.2.4'
    compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.akuleshov7:ktoml-core:0.3.0'
    implementation 'com.akuleshov7:ktoml-file:0.3.0'
    compileOnly 'net.luckperms:api:5.4'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

